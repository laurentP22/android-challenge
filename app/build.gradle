plugins {
    id 'com.android.application'
    id 'kotlin-android'
}
// Kotlin
apply plugin: "kotlin-kapt"
// Navigation-SafeArgs
apply plugin: "androidx.navigation.safeargs.kotlin"
// Hilt
apply plugin: "dagger.hilt.android.plugin"

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.androidchallenge"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.example.androidchallenge.CustomTestRunner"
    }

    signingConfigs {
        config {
            keyAlias keystoreProperties["keyAlias"]
            keyPassword keystoreProperties["keyPassword"]
            storeFile file(keystoreProperties["storeFile"])
            storePassword keystoreProperties["storePassword"]
        }
    }

    android {
        sourceSets {
            String sharedTestDir = "src/sharedTest/java"
            test {
                java.srcDirs += sharedTestDir
            }
            androidTest {
                java.srcDirs += sharedTestDir
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config

        }
    }
    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    // Write out the DB schema to a schemas subfolder of the project folder.
    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }
}

dependencies {
    // Dependencies for local unit tests
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:3.5.13"
    testImplementation "org.mockito:mockito-inline:2.13.0"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:4.13.2"
    androidTestImplementation "org.mockito:mockito-core:3.5.13"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    androidTestImplementation "androidx.test:core-ktx:1.3.0"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'

    // Fragments
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    // Architecture Components
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation "androidx.recyclerview:recyclerview:1.2.0"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Hilt Dependency Injection
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Volley: Http requests
    implementation "com.android.volley:volley:$volley"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    // Gson (parse http request)
    implementation "com.google.code.gson:gson:$gson"

    // Biometric
    implementation "androidx.biometric:biometric:$biometric"

    // EncryptedSharedPreferences
    implementation "androidx.security:security-crypto:$security_crypto"
}