stages:
  - environment
  - test

.updateContainerJob:
  image: docker:stable
  stage: environment
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull --quiet $CI_REGISTRY_IMAGE:deployment || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:deployment -t $CI_REGISTRY_IMAGE:deployment .
    - docker push $CI_REGISTRY_IMAGE:deployment

updateContainer:
  extends: .updateContainerJob
  rules:
    - if: ' $CI_COMMIT_BRANCH == "master"'
      changes:
        - Dockerfile
        - Gemfile.lock
ensureContainer:
  extends: .updateContainerJob
  rules:
    - if: ' $CI_COMMIT_BRANCH == "master"'
  allow_failure: true
  before_script:
    - "mkdir -p ~/.docker && echo '{\"experimental\": \"enabled\"}' > ~/.docker/config.json"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker manifest inspect $CI_REGISTRY_IMAGE:deployment > /dev/null && exit || true


# Configure the cache.
before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

# Test.
testDebug:
  image: $CI_REGISTRY_IMAGE:deployment
  stage: test
  only:
    - master
  script:
    - bundle exec fastlane test
